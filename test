#!/bin/bash
set -eu -o pipefail

cd "$(dirname "$0")"

./run --help > /dev/null # Regenerate script

if [[ -v 'DOCKERIZED_SHELLCHECK' ]] || ! command -v shellcheck &> /dev/null; then
	shopt -s expand_aliases
	alias shellcheck='docker run --rm -u $(id -u ${USER}):$(id -g ${USER}) --volume "$PWD:/mnt" koalaman/shellcheck:v0.8.0'
fi

# Note that we test ./git-draft rather than the contents of ./src/ -- this gives shellcheck a global view,
# but it's mainly because that way it understands that $args has been declared.
#
# Ignore SC2031 because it's currently being caused by https://github.com/koalaman/shellcheck/issues/2390
# (any actual issues should also trigger SC2030 so we won't miss them anyhow)
shellcheck -e SC2031 --shell=bash --external-sources ./run ./test ./git-draft tests/test_lib tests/{,**}/*.sh

for test in tests/*.sh tests/**/*.sh; do
	if ! bash "$test" &>"${test/.sh/.out}"; then
		echo "Failure in $test:"
		cat "${test/.sh/.out}"
		exit 1
	fi
	if [[ ! -e "${test/.sh/.txt}" ]]; then
		touch "${test/.sh/.txt}"
	fi
	if cmp "${test/.sh/.txt}" "${test/.sh/.out}"; then
		rm "${test/.sh/.out}"
	else
		diff --unified "${test/.sh/.txt}" "${test/.sh/.out}" || true
		read -r -N1 -p "[a]ccept changes, or [f]ail test? " accept
		echo
		if [[ "$accept" == 'a' ]]; then
			cp "${test/.sh/.out}" "${test/.sh/.txt}"
			echo "Updated expected output for $test"
		else
			echo "Rejected changes to output for $test"
			exit 1
		fi
	fi
done

echo All tests passed!
